@import 'bourbon';
@import '../variables_custom';
@import '../variables_foundation';
@import '../mixins';
@import "../vendor/foundation/components/block-grid";


// CHOICES HORIZONTAL
// ==========================
.choices-container{
  &.horizontal{
    .choices{
      @include block-grid(
          // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
          // Available options: 1-12 by default, and false.
          $per-row: 3,

          // This controls how much space is between each item in the block grid.
          // Use a variable or any pixel or em values.
          $spacing: $block-grid-default-spacing,

          // This controls whether or not base styles come through, set to false to leave out.
          $base-style: true
        );

      > li{
        padding-top: 0;
        padding-bottom: 0;
      }
    }
  }
}


// CHOICES VERTICAL
// ==========================
.choices-container.vertical{
  .choices{
    li{
      max-width: 340px;
      margin: 0 auto;
    }

    .button{
      margin-bottom: $spacing-default;
    }
  }
}



// CHOICES ICONS
// ==========================
.choices .choice{

  .choices-icon{
    text-align: center;
    height: 150px;
    margin: $spacing-xlarge 0;
    cursor: pointer;

    svg{
      height: 100%;
      max-width: 100%;
      @include transition(transform $transition-speed-default);
    }
  }

  &.active{
    .choices-icon{
      svg{
        @include transform(scale(1.3));

        g{
          fill: $black;
        }
      }

      &.large{
        @include transform(scale(1.5));
      }
    }
  }
}


// CHOICES QUESTION
// =====================
.choices-container{
  .choices-question{
    margin-bottom: $spacing-xlarge;
  }
}


// CHOICES BUTTONS
// =====================
.choices{
  @include no-bullets();

  .choice{
    padding-top: 0;
    padding-bottom: 0;

    .button{
      @include user-select(none);
      @include align-items(center);
      @include display(flex);
      @include justify-content(center);
      @include transition(all $transition-speed-fast);
      height: $button-height;

      .button-content{
        padding: 0;
        color: $black;
        @include transition(color $transition-speed-fast);
      }
    }

    &.active{
      .button{
        background-color: $polo;

        .button-content{
          color: $white;
        }
      }
    }
  }
}


// CHOICES COLORS
// ==========================
.choices-container{

  // shared
  .choices.active{
    .button:not(.active){
      opacity: 0.3;
      border-color: $black;
      &:hover{
        opacity: 1;
        border-color: transparent;
      }
    }
  }


  // white buttons
  &.color-white{
    .choices-question{
      color: $white;
    }

    .choices{
      .button{
        border-color: $white;

        .button-content{
          color: $white;
        }
      }


      // active white choices
      &.active{
        .button:not(.active){
          border-color: $white;

            .button-content{
              color: $black;
            }
        }

        .button{
          background-color: $white;

          &.active{
            .button-content{
                color: $polo;
            }
          }
        }
      }
    }
  }

  // default buttons
  &.color-default{
    .choices{
      .button{
        &:hover{
          .button-content{
            color: $white;
          }
        }
      }

      &.active{
        background-color: $polo;
        a{
          color: $white;
        }
      }
    }
  }
}


// CHOICES IMAGE
// =====================
.choices-container .choices-image-wrapper{
  height: 500px;
  width: 500px;

  &.bleed{
    position: absolute;
    width: 50vw;

    &.right{
      right: 0;
    }

    &.left{
      left: 0;
    }
  }

  &.rounded{
    .choices-image{
      border-radius: 50%;
    }
  }

  .choices-image{
    position: absolute;
    height: inherit;
    width: inherit;
    opacity: 0;
    @include cover(center);
    @include transition(all $transition-speed-slow);

    &.active{
      opacity: 1;
    }

    &.choices-image-default{
      @include filter(grayscale(100%));
    }
  }
}



// CHOICES THUMB IMAGE
// =====================
.choices .choice{
  .choices-thumb-image{
    position: relative;
    margin-top: $spacing-xlarge;
    @include filter(grayscale(100%));
    @include transition(all $transition-speed-slow);
    height: 320px;
    width: 320px;
    border-radius: 50%;
    @include cover(center);
  }

  &.active{
    .choices-thumb-image{
      z-index: 999;
      @include filter(grayscale(0%));
      @include transform(scale(1.1));
    }
  }
}

// CHOICES DESCRIPTION
// =====================
.choice-description{
  display: none;

  p{
    font-family: $font-family-serif;
    font-size: rem-calc(20);
    font-style: italic;
    color: $gray80;
    margin-bottom: 0;
    max-width: 500px;
  }

  &.active{
    @include display(flex);
  }
}


// CHOICES BG
// =================
.choices-background{
  position: relative;

  .choices-background-default{
    @include filter(grayscale(100%));
  }

  .choices-background-image{
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 0;
    opacity: 0;
    @include cover(center);
    @include transition(all $transition-speed-slow);

    &.active{
      opacity: 1;
    }
  }
}


// CHOICES MARQUEE
// =================

.choices-marquee{
  position: relative;
  margin-bottom: $spacing-default;
  height: 600px;

  &.bleed{
    .choices-question{
      position: absolute;
      bottom: 0;
      max-width: inherit;
    }
  }

  .choices-marquee-image{
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    @include cover(center);
    @include transition(all $transition-speed-slow);

    &.choices-marquee-image-default{
      @include filter(grayscale(100%));
    }

    &.active{
      opacity: 1;
    }
  }
}
